name: CMake (build artifacts)

on: workflow_dispatch

jobs:
  build-artifacts:
    runs-on: ${{ matrix.os }}
    env:
      path-separator: ${{ (startsWith(matrix.os, 'windows') && '\') || '/' }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-13, macos-14]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        CURRENT_VERSION=$(python -m ProjectVersion GET_VERSION)
        echo "release-version=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"
        echo "binary-output-dir=${{ github.workspace }}${{ env.path-separator }}bin${{ env.path-separator }}${{ (startsWith(matrix.os, 'ubuntu') && 'linux') || (startsWith(matrix.os, 'windows') && 'windows') || (startsWith(matrix.os, 'macos') && 'macos') || '' }}_${{ (startsWith(matrix.os, 'macos-14') && 'arm64') || 'x86_64' }}${{ env.path-separator }}Release" >> "$GITHUB_OUTPUT"
        echo "results-output-dir=${{ github.workspace }}${{ env.path-separator }}results" >> "$GITHUB_OUTPUT"
        echo "archive-name=libsokketter-$CURRENT_VERSION-${{ matrix.os }}-${{ (startsWith(matrix.os, 'macos-14') && 'arm64') || 'x86-64' }}" >> "$GITHUB_OUTPUT"
        echo "sokketter-cli-name=sokketter-cli-$CURRENT_VERSION-${{ matrix.os }}-${{ (startsWith(matrix.os, 'macos-14') && 'arm64') || 'x86-64' }}" >> "$GITHUB_OUTPUT"
        echo "sokketter-ui-name=sokketter-ui-$CURRENT_VERSION-${{ matrix.os }}-${{ (startsWith(matrix.os, 'macos-14') && 'arm64') || 'x86-64' }}" >> "$GITHUB_OUTPUT"

    - name: Install dependencies (Ubuntu-only)
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: |
        sudo apt update
        sudo apt install libfuse2 libudev-dev ninja-build wget libxcb1 libxcb-cursor0 libxcb-xinerama0 libxcb-xfixes0 libxcb-image0
        wget -c https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
        chmod +x linuxdeployqt-continuous-x86_64.AppImage

    - name: Install Qt6 dependencies
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.*'

    - name: Run Python build script
      run: python -m Build

    #   # This action has bug with wildcards under Windows OS, thus ignore it.
    # - name: Check binaries (non-Windows)
    #   uses: andstor/file-existence-action@v3
    #   if: ${{ !startsWith(matrix.os, 'windows') }}
    #   with:
    #     files: "${{ steps.strings.outputs.binary-output-dir }}${{ env.path-separator }}include${{ env.path-separator }}*, ${{ steps.strings.outputs.binary-output-dir }}${{ env.path-separator }}libs${{ env.path-separator }}*, ${{ steps.strings.outputs.binary-output-dir }}${{ env.path-separator }}bin${{ env.path-separator }}*"
    #     ignore_case: true
    #     fail: true

    # - name: Deploy with linuxdeployqt (Ubuntu-only)
    #   if: ${{ startsWith(matrix.os, 'ubuntu') }}
    #   run: |
    #     cd ${{ steps.strings.outputs.binary-output-dir }}${{ env.path-separator }}bin
    #     mkdir -p ${{ steps.strings.outputs.sokketter-ui-name }}/usr/bin
    #     cp sokketter-ui ${{ steps.strings.outputs.sokketter-ui-name }}/usr/bin/
    #     cp ${{ github.workspace }}${{ env.path-separator }}sokketter-ui${{ env.path-separator }}resources${{ env.path-separator }}sokketter-ui.desktop ${{ steps.strings.outputs.sokketter-ui-name }}/
    #     cp ${{ github.workspace }}${{ env.path-separator }}sokketter-ui${{ env.path-separator }}resources${{ env.path-separator }}sokketter-ui-icon.png ${{ steps.strings.outputs.sokketter-ui-name }}/
    #     sed -i '/^X-AppImage-Version=/c\X-AppImage-Version=${{ steps.strings.outputs.release-version }}' ${{ steps.strings.outputs.sokketter-ui-name }}/sokketter-ui.desktop
    #     ${{ github.workspace }}${{ env.path-separator }}linuxdeployqt-continuous-x86_64.AppImage ${{ steps.strings.outputs.sokketter-ui-name }}/usr/bin/sokketter-ui -appimage \
    #       -executable=${{ steps.strings.outputs.sokketter-ui-name }}/usr/bin/sokketter-ui \
    #       -verbose=2

    # - name: Deploy with macdeployqt (MacOS-only)
    #   if: ${{ startsWith(matrix.os, 'macos') }}
    #   run: |
    #     cd ${{ steps.strings.outputs.binary-output-dir }}${{ env.path-separator }}bin
    #     mv sokketter-ui.app ${{ steps.strings.outputs.sokketter-ui-name }}.app
    #     APP_PATH=$(find . -name "*.app" -type d | head -n 1)
    #     APP_NAME=$(find . -name "*.app" -type d | head -n 1 | xargs basename)
    #     echo "App path found: $APP_PATH"
    #     echo "App name found: $APP_NAME"
    #     macdeployqt "$APP_PATH"
    #     zip -r sokketter-ui.zip "${APP_NAME}"

    - name: Upload library files
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.strings.outputs.archive-name }}
        path: ${{ steps.strings.outputs.results-output-dir }}${{ env.path-separator }}libsokketter
        if-no-files-found: error

    - name: Upload CLI application
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.strings.outputs.sokketter-cli-name }}
        path: ${{ steps.strings.outputs.results-output-dir }}${{ env.path-separator }}sokketter-cli
        if-no-files-found: error

    # - name: Upload sokketter-ui (Windows-only)
    #   if: ${{ startsWith(matrix.os, 'windows') }}
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: ${{ steps.strings.outputs.sokketter-ui-name }}
    #     path: ${{ steps.strings.outputs.sokketter-ui-name }}.zip
    